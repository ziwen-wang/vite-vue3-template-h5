"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Languages = void 0;
const core_1 = require("../core");
/**
 * Crowdin supports more than 300 world languages and custom languages created in the system.
 *
 * Use API to get the list of all supported languages and retrieve additional details (e.g. text direction, internal code) on specific language.
 */
class Languages extends core_1.CrowdinApi {
    listSupportedLanguages(options, deprecatedOffset) {
        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {
            options = { limit: options, offset: deprecatedOffset };
        }
        const url = `${this.url}/languages`;
        return this.getList(url, options.limit, options.offset);
    }
    /**
     * @param request request body
     * @see https://support.crowdin.com/api/v2/#operation/api.languages.post
     */
    addCustomLanguage(request) {
        const url = `${this.url}/languages`;
        return this.post(url, request, this.defaultConfig());
    }
    /**
     * @param languageId language identifier
     * @see https://support.crowdin.com/api/v2/#operation/api.languages.get
     */
    getLanguage(languageId) {
        const url = `${this.url}/languages/${languageId}`;
        return this.get(url, this.defaultConfig());
    }
    /**
     * @param languageId language identifier
     * @see https://support.crowdin.com/api/v2/#operation/api.languages.delete
     */
    deleteCustomLanguage(languageId) {
        const url = `${this.url}/languages/${languageId}`;
        return this.delete(url, this.defaultConfig());
    }
    /**
     * @param languageId language identifier
     * @param request request body
     * @see https://support.crowdin.com/api/v2/#operation/api.languages.patch
     */
    editCustomLanguage(languageId, request) {
        const url = `${this.url}/languages/${languageId}`;
        return this.patch(url, request, this.defaultConfig());
    }
}
exports.Languages = Languages;
